{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/attachments/{id}": {
            "put": {
                "description": "Update the details of an existing attachment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attachments"
                ],
                "summary": "Update an existing attachment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated attachment data",
                        "name": "attachment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAttachmentData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input or error updating attachment",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing attachment by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attachments"
                ],
                "summary": "Delete an attachment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attachment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error deleting attachment",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Attachment not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/todo-item/{id}": {
            "get": {
                "description": "Retrieve a specific to-do item by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-items"
                ],
                "summary": "Get a to-do item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved to-do item",
                        "schema": {
                            "$ref": "#/definitions/models.TodoItem"
                        }
                    },
                    "400": {
                        "description": "Error retrieving item",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Todo item not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing to-do item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-items"
                ],
                "summary": "Update a to-do item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated to-do item data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTodoItemData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input or error updating item",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Todo item not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing to-do item by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-items"
                ],
                "summary": "Delete a to-do item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error deleting item",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Todo item not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/todo-item/{id}/completion": {
            "put": {
                "description": "Update the completion status of a to-do item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-items"
                ],
                "summary": "Set to-do item completion status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "To-do item completion status update",
                        "name": "completion",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TodoItemCompletionUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completion status updated",
                        "schema": {
                            "$ref": "#/definitions/models.TodoItem"
                        }
                    },
                    "400": {
                        "description": "Invalid input or error updating completion status",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Todo item not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/todo-item/{id}/sub-item": {
            "post": {
                "description": "Add a new sub-item to an existing to-do item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-items"
                ],
                "summary": "Add a sub-item to a to-do item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "To-do sub-item data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTodoItemData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Sub-item added successfully",
                        "schema": {
                            "$ref": "#/definitions/models.TodoItem"
                        }
                    },
                    "400": {
                        "description": "Invalid input or error adding sub-item",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Todo item not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/todo-items/:id/attachments": {
            "post": {
                "description": "Add a new attachment to an existing to-do item",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attachments"
                ],
                "summary": "Add an attachment to a to-do item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Attachment data",
                        "name": "attachment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAttachmentData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attachment added successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Attachment"
                        }
                    },
                    "400": {
                        "description": "Invalid input or error adding attachment",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Todo item not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieve a list of all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a list of users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Error retrieving users",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid input or error creating user",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "description": "Retrieve a user by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Error retrieving user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the information of an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserModel"
                        }
                    },
                    "400": {
                        "description": "Invalid input or error updating user",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing user by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error deleting user",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userId}/todo-lists": {
            "get": {
                "description": "Retrieve a list of to-do lists associated with the specified user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user's to-do lists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of to-do list IDs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Error retrieving to-do lists",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new to-do list for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-lists"
                ],
                "summary": "Create a new to-do list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "To-do list data",
                        "name": "list",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTodoListData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "List created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.TodoList"
                        }
                    },
                    "400": {
                        "description": "Invalid input or error creating list",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userId}/todo-lists/{listId}": {
            "get": {
                "description": "Retrieve a specific to-do list by its ID and the user's ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-lists"
                ],
                "summary": "Get a specific to-do list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "List ID",
                        "name": "listId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved to-do list",
                        "schema": {
                            "$ref": "#/definitions/models.TodoList"
                        }
                    },
                    "400": {
                        "description": "Error retrieving list",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of an existing to-do list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-lists"
                ],
                "summary": "Update a to-do list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "List ID",
                        "name": "listId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated to-do list data",
                        "name": "list",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTodoListData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input or error updating list",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing to-do list by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-lists"
                ],
                "summary": "Delete a to-do list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "List ID",
                        "name": "listId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Error deleting list",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userId}/todo-lists/{listId}/items": {
            "post": {
                "description": "Add a new item to an existing to-do list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-lists"
                ],
                "summary": "Add an item to a to-do list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "List ID",
                        "name": "listId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "To-do item data",
                        "name": "item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateTodoItemData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Item added successfully",
                        "schema": {
                            "$ref": "#/definitions/models.TodoItem"
                        }
                    },
                    "400": {
                        "description": "Invalid input or error adding item",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{userId}/todo-lists/{listId}/share": {
            "post": {
                "description": "Share a specific to-do list with another user by providing their user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-lists"
                ],
                "summary": "Share a to-do list with another user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "List ID",
                        "name": "listId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Share list data",
                        "name": "share",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ShareListData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List shared successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input or error sharing list",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Attachment": {
            "type": "object",
            "properties": {
                "file_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "list_id": {
                    "type": "string"
                },
                "s3_url": {
                    "type": "string"
                },
                "todo_item_id": {
                    "type": "string"
                }
            }
        },
        "models.CreateAttachmentData": {
            "type": "object",
            "properties": {
                "file_type": {
                    "type": "string"
                },
                "s3_url": {
                    "type": "string"
                }
            }
        },
        "models.CreateTodoItemData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "models.CreateTodoListData": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CreateUserModel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "models.ShareListData": {
            "type": "object",
            "properties": {
                "recipientId": {
                    "type": "string"
                }
            }
        },
        "models.TodoItem": {
            "type": "object",
            "properties": {
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Attachment"
                    }
                },
                "complete": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "list_id": {
                    "type": "string"
                },
                "parent_id": {
                    "description": "empty if no parent",
                    "type": "string"
                },
                "sub_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TodoItem"
                    }
                }
            }
        },
        "models.TodoItemCompletionUpdate": {
            "type": "object",
            "properties": {
                "complete": {
                    "type": "boolean"
                }
            }
        },
        "models.TodoList": {
            "type": "object",
            "properties": {
                "CreatedBy": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TodoItem"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}